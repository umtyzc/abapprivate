CLASS lhc_hurdasern DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS calculatebelsnos FOR DETERMINE ON SAVE
      IMPORTING keys FOR hurdasern~calculatebelsnos.
    METHODS fill_input_dependent_values FOR DETERMINE ON MODIFY
      IMPORTING keys FOR hurdasern~fill_input_dependent_values.
    METHODS get_instance_features FOR INSTANCE FEATURES
      IMPORTING keys REQUEST requested_features FOR hurdasern RESULT result.
    METHODS precheck_update FOR PRECHECK
      IMPORTING entities FOR UPDATE hurdasern.

ENDCLASS.

CLASS lhc_hurdasern IMPLEMENTATION.

  METHOD calculatebelsnos.

    DATA max_belsno TYPE zhvl_mm_hur_bel_sno.
    DATA update TYPE TABLE FOR UPDATE zhvl_mm_i_hur_baslik\\hurdasern.

    READ ENTITIES OF zhvl_mm_i_hur_baslik IN LOCAL MODE
    ENTITY hurdasern BY \_hurdakalem
      FIELDS ( hurdauuid hurdakalemuuid belno lgort werks matnr charg )
      WITH CORRESPONDING #( keys )
      RESULT DATA(hurdakalem).

    LOOP AT hurdakalem INTO DATA(hurdakal).
      READ ENTITIES OF zhvl_mm_i_hur_baslik IN LOCAL MODE
        ENTITY hurdakalem BY \_hurdasern
          FIELDS ( belsno belno hurdakalemuuid hurdasernruuid sernr )
        WITH VALUE #( ( %tky = hurdakal-%tky ) )
        RESULT DATA(hurdasern).

      max_belsno ='0000000000'.
      LOOP AT hurdasern INTO DATA(hurdas).
        IF hurdas-belsno > max_belsno.
          max_belsno = hurdas-belsno.
        ENDIF.
      ENDLOOP.

      LOOP AT hurdasern INTO hurdas WHERE belsno IS INITIAL.
        READ ENTITIES OF zhvl_mm_i_hur_baslik IN LOCAL MODE
         ENTITY hurdakalem
           FIELDS ( belno charg werks lgort matnr )
           WITH CORRESPONDING #( keys )
           RESULT DATA(hurdabel).

        READ TABLE hurdabel INTO DATA(ls_hurdabel)
        WITH KEY %key-hurdakalemuuid = hurdas-%key-hurdakalemuuid.
        max_belsno += 10.
        UNPACK max_belsno TO max_belsno.

*        SELECT SINGLE equnr FROM v_equi_eqbs_sml INTO @DATA(lv_equnr)
*        WHERE sernr = @hurdas-sernr.

        APPEND VALUE #( %tky      = hurdas-%tky
                        belsno = max_belsno
                        belno = ls_hurdabel-belno
                        werks = ls_hurdabel-werks
                        lgort = ls_hurdabel-lgort
                        matnr = ls_hurdabel-matnr
                        charg = ls_hurdabel-charg
                        "equnr = lv_equnr

                      ) TO update.
      ENDLOOP.
    ENDLOOP.


    MODIFY ENTITIES OF zhvl_mm_i_hur_baslik IN LOCAL MODE
    ENTITY hurdasern
    UPDATE FIELDS ( belsno belno ) WITH update
    REPORTED DATA(update_reported).

    reported = CORRESPONDING #( DEEP update_reported ).

  ENDMETHOD.

  METHOD fill_input_dependent_values.

    " Required only for draft instances
    DATA(lt_draft_keys) = keys.
    DELETE lt_draft_keys WHERE %is_draft = if_abap_behv=>mk-off.
    IF lt_draft_keys IS INITIAL.
      RETURN.
    ENDIF.

    " Read required hurkalem data
    READ ENTITY IN LOCAL MODE zhvl_mm_i_hur_sern
      FIELDS ( hurdauuid hurdakalemuuid hurdasernruuid belno werks lgort matnr charg )
      WITH VALUE #( FOR <root_key> IN lt_draft_keys ( %tky = <root_key>-%tky ) )
    RESULT DATA(lt_hurkasernr).

    LOOP AT lt_hurkasernr ASSIGNING FIELD-SYMBOL(<ls_hurkasernr>).

      IF <ls_hurkasernr>-werks IS INITIAL.
        READ ENTITIES OF zhvl_mm_i_hur_baslik IN LOCAL MODE
               ENTITY hurdakalem
                 FIELDS ( belno lgort werks matnr charg )
                 WITH CORRESPONDING #( keys )
                 RESULT DATA(hurdabel).

        READ TABLE hurdabel INTO DATA(ls_hurdabel)
                WITH KEY %key-hurdauuid = <ls_hurkasernr>-%key-hurdauuid
                         %key-hurdakalemuuid = <ls_hurkasernr>-%key-hurdakalemuuid
                           .

        <ls_hurkasernr>-werks = ls_hurdabel-werks.
        <ls_hurkasernr>-lgort = ls_hurdabel-lgort.
        <ls_hurkasernr>-matnr = ls_hurdabel-matnr.
        <ls_hurkasernr>-charg = ls_hurdabel-charg.

      ENDIF.
    ENDLOOP.

    MODIFY ENTITY IN LOCAL MODE zhvl_mm_i_hur_sern
      UPDATE FROM VALUE #( FOR hursernr IN lt_hurkasernr
                           ( %tky                                = hursernr-%tky
                             %data-werks              = hursernr-werks
                             %data-lgort              = hursernr-lgort
                             %data-matnr              = hursernr-matnr
                             %data-charg              = hursernr-charg
                             %control-werks = if_abap_behv=>mk-on
                             %control-lgort = if_abap_behv=>mk-on
                             %control-matnr = if_abap_behv=>mk-on
                             %control-charg = if_abap_behv=>mk-on
 ) )
      FAILED   DATA(lt_failed)
      REPORTED DATA(ls_reported).

    IF ls_reported-hurdabaslik IS NOT INITIAL.
      reported-hurdabaslik = CORRESPONDING #( ls_reported-hurdabaslik ).
    ENDIF.

  ENDMETHOD.

  METHOD get_instance_features.
  ENDMETHOD.

  METHOD precheck_update.
  ENDMETHOD.

ENDCLASS.
